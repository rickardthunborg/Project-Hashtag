@page
@model Project_Hashtag.Pages.SearchModel
@{
    ViewData["Title"] = "Facegram";
}

<h2>Search results:</h2>


<h3>Matching users:</h3>

<ul class="flow">

    <li>

    @foreach(var user in Model.QueriedUsers)
    {
            <p>
                <a asp-page="Profile" asp-route-userId="@user.ID"> <pre> @user.Name</pre></a>
            </p>
    }
    </li>

</ul>

<h3>Matching posts:</h3>


<ul class="flow">
	@foreach (var post in Model.QueriedPosts)
    {
        <li>
            <p>
                Posted by: @Model.Users.Single(u => u.ID == post.UserID).Name
            </p>
            <p> @Model.Posts.Single(p => p.ID == post.ID).Description</p>
            <p> @post.TimeSincePost()</p>
            <p>Likes: @post.LikeCount</p>
            <form method="post" asp-page-handler="like" asp-route-id="@post.ID">
                <input hidden name="userId" value="@post.UserID">
                <button type="submit">Like</button>
            </form>

            <p>Comments: </p>
            @for (int i = 0; i < Math.Min(3, Model.Comments.Where(c => c.PostID == post.ID).Count()); i++)
            {
                var comment = @Model.Comments.Where(c => c.PostID == post.ID).OrderByDescending(c => c.CreatedDate).ToList()[i];
                <div class="postProfile">
                    <a asp-page="Profile" asp-route-userId="@comment.User.ID" class="postProfileBox">
                        <div class="profilePic"> </div>
                        <pre>@comment.User.Name</pre>
                    </a>
                </div>
                <p>@comment.Text </p>
                <p>@comment.TimeSinceComment()</p>

            }
            <form method="post" asp-page-handler="comment" asp-route-postID="@post.ID">
                <input type="text" name="content">
                <input type="hidden" name="search" value="@Request.Query["search"]" />
                <button type="submit">Comment</button>
            </form>
        </li>
    }
</ul>


