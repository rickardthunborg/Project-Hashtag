@using Project_Hashtag.Pages.Shared.Components.LoginMenu;
@inject Project_Hashtag.Data.AccessControl accessControl
@inject Project_Hashtag.Data.AppDbContext database

<!DOCTYPE html>
<html lang="en">
<link rel="icon" type="image/png" href="~/Favicon.png">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true">
    <script src="~/js/site.js" asp-append-version="true" defer></script>
    @await RenderSectionAsync("Scripts", required: false)
</head>
<body>
    <header class="parentNavBarContainer">
        <div class="div1NavBar">
            <form method="get" asp-page="Search" id="searchbar">
                <input type="text" name="search" placeholder="Search" autocomplete="off">
                <label>
                    <button type="submit"></button>
                </label>
            </form>
        </div>
        <a class="div2NavBar" asp-page="./index">
            <img src="~/FaceGramLogo.svg" alt="FaceGram Logo Gold" class="svg-logo" type="image/svg+xml" id="FaceGramNavBarLogo">
        </a>
        <div class="div3NavBar">
            @{
                var users = database.Users.ToList();
                var likes = database.Likes.ToList();
                var follows = database.Follows.ToList();
                var loggedIn = accessControl;
                var yourFollowers = follows.Where(f => f.UserID == loggedIn.LoggedInAccountID).ToList();
                var peopleWhoFollow = users
                .Where(u => yourFollowers.Any(f => f.FollowingId == u.ID))
                .OrderByDescending(u => yourFollowers
                .Where(f => f.FollowingId == u.ID)
                .Select(f => f.DateFollowed)
                .FirstOrDefault())
                .ToList();
            }
            <div class="notificationDiv">
                <label>
                    <button id="notificationButton" type="button"></button>
                </label>
                <ul id="notificationList" class="hidden">
                    @if(peopleWhoFollow.Count < 1)
                    {
                        <li id="noFollows">
                            <p>You have no new followers :(</p>
                        </li>
                    }
                    else
                    {
                        @foreach (var person in peopleWhoFollow.Take(5))
                        {
                            var follow = yourFollowers.Where(f => f.FollowingId == person.ID).FirstOrDefault();
                            <a asp-page="Profile" asp-route-userId="@person.ID">
                            <li>
                                <p>@person.Name has followed you!</p>
                                <p id="sinceFollow">@follow.TimeSinceFollow() ago</p>
                            </li>
                            </a>
                        }
                    }
                    
                </ul>
            </div>
            <a asp-page="Profile" asp-route-userId="@accessControl.LoggedInAccountID">
                <img class="pic-top" src="@database.Users.Find(accessControl.LoggedInAccountID).Avatar" alt="error">
                <p>@accessControl.LoggedInAccountName</p>
            </a>
        </div>
    </header>
    <div id="fakeLogin">
        <environment names="Development">
            @await Component.InvokeAsync(nameof(FakeLoginMenu))
        </environment>
    </div>
    <main>
        @RenderBody()
    </main>
    <footer>
        <p>School project made by: </p>
        <ul>
            <li>
                <a href="https://www.linkedin.com/in/rickard-thunborg-472596242/">Rickard Thunborg</a>
            </li>
            <li>
                <a href="https://www.linkedin.com/in/alex-grundell/">Alex Grundell</a>
            </li>
            <li>
                <a>Gustav Mårtensson</a>
            </li>
            <li>
                <a>Oliver Talcoth</a>
            </li>
        </ul>
    </footer>
</body>
</html>