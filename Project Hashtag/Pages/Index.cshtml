@page
@model IndexModel
@inject Project_Hashtag.Data.AccessControl accessControl
@{
    ViewData["Title"] = "Facegram";
}


<ul class="flow">
    <li class="addNewPost">
        <form method="post" enctype="multipart/form-data">
            <div id="newPostTitle">
                <img class="pic-top" src="@Model.database.Users.Single(x => x.ID == @Model.LoggedIn.LoggedInAccountID).Avatar" alt="error">
                <textarea required name="desc" placeholder="What's happening?" rows="1" oninput="autoExpand(this)"></textarea>
                <span asp-validation-for="desc" class="text-danger"></span>
            </div>
            <div id="addPostBottom">
                <div id="addTag">
                    <p>Tag </p>
                    <img src="~/hashtag.png" />
                    <input type="text" name="tag" autocomplete="off" maxlength="20" />
                </div>
                <p class="imageText">Picture: </p>
                <label id="addPic">
                    <input type="file" name="photo" id="photo-input">
                    <span id="file-label"></span>
                </label>
                <button type="submit">Post</button>
            </div>
        </form>
    </li>
    <div id="banderoll1">
        <h3># Posts</h3>
    </div>
    <div class="spacer"></div>
    @foreach (var post in Model.Posts)
    {
        var reportedByUser = @Model.database.Reports.Any(x => x.UserID == Model.LoggedIn.LoggedInAccountID && x.PostID == post.ID);
        var reports = @Model.database.Reports.Where(r => Model.PeopleYouFollow.Select(p => p.UserID).Contains(r.UserID) && r.PostID == post.ID).Count();
        var poster = Model.Users.Single(x => post.UserID == x.ID);
        if (post.UserID == Model.LoggedIn.LoggedInAccountID)
        {
            continue;
        }
        <li>
            @if (reports == 1)
            {
                <div class="reportWarning"> <img src="~/information.png" /> <p> @reports person you follow has reported this post as untrustworthy.</p></div>
            }
            else if (reports > 0)
            {
                <div class="reportWarning"> <img src="~/information.png" /> <p> @reports people you follow have reported this post as untrustworthy.</p></div>
            }
            <div class="postProfile">
                <a asp-page="Profile" asp-route-userId="@poster.ID" class="postProfileBox">
                    <img class="pic-top" src="@poster.Avatar" alt="error">
                    <pre>@poster.Name</pre>
                </a>

                @if (reportedByUser)
                {
                    <label class="report reported"> <button class="popupButton"></button> </label>
                }
                else
                {
                    <label class="report"> <button class="popupButton"></button> </label>
                }

                <p>· @post.TimeSincePost()</p>
            </div>
            
@*  
    
            Below is the report popup

*@
            <div class="popupForm" style="display: none;">
                @if (reportedByUser)
                {
                    <p>Do you want to remove your report on this post?</p>
                }
                else 
                {
                    <p>Do you want to report this post?</p>
                }
                <form method="post" asp-page-handler="report" asp-route-id="@post.ID"> <button type="submit">Yes</button> </form>
                <button id="closeButton">No</button>
            </div>


            <p class="postText"> @post.Description</p>
            @if (post.PictureUrl != null)
            {
                <div class="image">
                    <img src="@post.PictureUrl" alt="Error loading picture" />
                </div>
            }
            <div class="interaction">
                <form method="post" asp-page-handler="like" asp-route-id="@post.ID">
                    @if (post.IsLiked(Model.LoggedIn.LoggedInAccountID, Model.database))
                    {
                        <label class="liked">
                            <button type="submit"></button>
                            <p>@post.LikeCount</p>
                        </label>
                    }
                    else
                    {
                        <label>
                            <button type="submit"></button>
                            <p>@post.LikeCount</p>
                        </label>
                    }
                </form>
                <a asp-page="post" asp-route-postID="@post.ID" class="commentContainer">
                    <div class="comments">
                    </div>
                    <p class="commentCount">@Model.Comments.Where(x => x.PostID == post.ID).Count()</p>
                </a>
                @if (post.Tag != null)
                {
                    <a asp-page="Search" class="tagContainer">
                        <div class="tags"></div>
                        <p>@post.Tag </p>
                    </a>
                }
            </div>
            @if (@Model.Comments.Where(x => x.PostID == post.ID).Count() > 0)
            {
                <p class="commentSectionText">Comments: <a asp-page="post" asp-route-postID="@post.ID"> View all</a> </p>
                @for (int i = 0; i < Math.Min(3, Model.Comments.Where(c => c.PostID == post.ID).Count()); i++)
                {
                    var comment = @Model.Comments.Where(c => c.PostID == post.ID).OrderByDescending(c => c.CreatedDate).ToList()[i];
                    <div id="comment">
                        <div class="commentProfilePic">
                            <a asp-page="Profile" asp-route-userId="@comment.User.ID">
                                <img src="@comment.User.Avatar" class="pic-top" />
                            </a>
                        </div>
                        <div class="commentText">
                            <a asp-page="Profile" asp-route-userId="@comment.User.ID"> @comment.User.Name</a>
                            <p>@comment.Text </p>
                        </div>
                    </div>
                    <p class="commentTime">@comment.TimeSinceComment()</p>

                }
            }
            <form method="post" asp-page-handler="comment" asp-route-id="@post.ID" id="postComment">
                <img class="pic-top" src="@Model.database.Users.Single(x => x.ID == @Model.LoggedIn.LoggedInAccountID).Avatar" alt="error">
                <textarea required name="content" placeholder="Add a comment..." rows="1" oninput="autoExpand(this)"></textarea>
                <input hidden name="userId" value="@post.UserID">
                <button type="submit">Comment</button>
            </form>
        </li>
    }
</ul>
@*<p>Comments: </p>
            <ul>
                @foreach (var comment in Model.Comments.Where(x => x.PostID == post.ID).OrderBy(z => z.CreatedDate))
                {
                    var user = Model.Users.Single(x => x.ID == comment.UserID);

                    <li>
                        <p>@comment.Text </p>
                        <a asp-page="Profile" asp-route-userId="@user.ID"><pre>  by: @user.Name</pre></a>
                        @if(comment.UserID == Model.LoggedIn.LoggedInAccountID)
                        {
                        <form method="post" asp-page-handler="deletecomment" asp-route-id="@post.ID"><button type="submit">Delete Comment</button></form>
                        }

                    </li>
                }
            </ul>

            <form method="post" asp-page-handler="comment" asp-route-id="@post.ID">
                <input type="text" name="content">
                <button type="submit">Comment</button>
                </form>*@
